<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:convertors="clr-namespace:TaskManagement.Convertors"
                    xmlns:cal="http://www.caliburnproject.org"
                    xmlns:micro="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
                    xmlns:controls="clr-namespace:Notifications.Wpf.Controls;assembly=Notifications.Wpf"
                    xmlns:data="clr-namespace:TaskManagement.Data.Model;assembly=TaskManagement.Data"
                    xmlns:model="clr-namespace:TaskManagement.Model.Model;assembly=TaskManagement.Model">

    <convertors:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
    <convertors:DueDateConcerter x:Key="DueDateConcerter"/>

    <Style TargetType="controls:Notification">
        <Style.Resources>
            <DataTemplate DataType="{x:Type micro:PropertyChangedBase}">
                <ContentControl cal:View.Model="{Binding}"/>
            </DataTemplate>
        </Style.Resources>
    </Style>

    <Style TargetType="controls:NotificationArea">
        <Setter Property="MaxItems" Value="7" />
    </Style>

    <Style TargetType="TextBlock" x:Key="PrimaryStyle">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#41b1e1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style TargetType="FrameworkElement" x:Key="VisibleAnimation">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Opacity" Value="0"/>
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0.0" To="1.0" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" x:Key="UserInputTextBox" >
        <Setter Property="Height" Value="28"/>
        <Setter Property="Margin" Value="34 0 50 0"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="errorControl" />
                        <TextBlock Text="{Binding AdornedElement.ToolTip, ElementName=errorControl}" Foreground="Red"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="RadioButton" x:Key="SettingsRadioButton">
        <Setter Property="Margin" Value="15,0,0,15"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="SettingsItemsName">
        <Setter Property="Margin" Value="0,10,0,10"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="LengendName">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Margin" Value="2,0,10,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Border" x:Key="LegendColorBox">
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="RowDefinition">
        <Setter Property="Height" Value="Auto"/>
    </Style>

    <ObjectDataProvider x:Key="StatusItems" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="model:Status"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ObjectDataProvider x:Key="AuthenticationTypes" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="data:AuthenticationType"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ObjectDataProvider x:Key="PriorityItems" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="model:Priority"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <Style TargetType="Window" x:Key="DefaultStyles">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="helvetica"/>
    </Style>

    <Style TargetType="Border" x:Key="SelectedViewBorder">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=List, Path=MouseUp}" Value="true">
                <Setter Property="BorderBrush" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>